[project]
name = "py-templatify"
version = "0.0.1"
description = ""
readme = "README.md"
authors = [
    { name = "Galtozzy", email = "galtozzy+git@gmail.com" }
]
requires-python = ">=3.11"
dependencies = []

[tool.taskipy.tasks]
format-and-lint = "task ruff && task mypy-lint"
ruff = "ruff format ./src/ && ruff check ./src/ --fix --unsafe-fixes"

ruff-lint = "ruff check ./src"
mypy-lint = "mypy --install-types --non-interactive ./src/"

[tool.ruff]
line-length = 120
extend-exclude = ["site-packages", "*.pyi"]
target-version = 'py311'


[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
]

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
line-ending = 'auto'
skip-magic-trailing-comma = false
exclude = ['*.pyi']

[tool.ruff.lint.mccabe]
max-complexity = 6

[tool.ruff.lint.isort]
split-on-trailing-comma = false
lines-after-imports = 2
known-first-party = ["app"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = false

[tool.mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
strict = true
pretty = true

exclude = [
    'test_',
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.14.1",
    "pytest>=8.3.4",
    "ruff>=0.9.2",
    "taskipy>=1.14.1",
]
